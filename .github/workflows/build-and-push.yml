jobs:
  fmt-validate-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Init
        run: terraform init
        working-directory: terraform-azure-vm
      
      - name: Terraform Fmt
        run: terraform fmt -check
        working-directory: terraform-azure-vm
      
      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform-azure-vm
      
      - name: Select var-file
        id: vars
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          if [ "$BRANCH" = "main" ]; then echo "TFVARS=envs/prod.tfvars" >> $GITHUB_ENV; fi
          if [ "$BRANCH" = "develop" ]; then echo "TFVARS=envs/dev.tfvars" >> $GITHUB_ENV; fi
      
      - name: Terraform Plan
        run: terraform plan -var-file="$TFVARS" -out=tfplan
        working-directory: terraform-azure-vm
      
      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform-azure-vm/tfplan

  apply:
    runs-on: ubuntu-latest
    needs: fmt-validate-plan
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Apply
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          terraform init
          terraform apply -auto-approve tfplan
        working-directory: terraform-azure-vm
